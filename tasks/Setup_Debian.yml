---

- name: Disable thp
  ansible.builtin.shell: |
      echo never > /sys/kernel/mm/transparent_hugepage/enabled
      echo never > /sys/kernel/mm/transparent_hugepage/defrag
      echo 0 > /proc/sys/vm/compaction_proactiveness

# - name: "Update CA Certificates"
#   ansible.builtin.apt:
#     name: ca-certificates
#     update_cache: yes

- name: Install Puppet Repository
  block:
    - name: Add Public Key
      apt_key:
        url: https://apt.puppetlabs.com/keyring.gpg
        state: present
    - name: Install Puppet Repo
      apt_repository:
        repo: deb https://apt.puppetlabs.com/ {{ ansible_distribution_release }} {{ puppet_version }}
        state: present
        filename: /etc/apt/sources.list.d/{{ puppet_version }}.list

- name: Install Foreman Repository
  block:
    - name: Add Public Key
      apt_key:
        url: https://deb.theforeman.org/foreman.asc
        state: present
    - name: Install Foreman Repo
      apt_repository:
        repo: deb https://deb.theforeman.org/ {{ ansible_distribution_release }} {{ foreman_version }}
        state: present
        filename: /etc/apt/sources.list.d/foreman.list
    - name: Install Foreman Plugin Repo
      apt_repository:
        repo: deb https://deb.theforeman.org/ plugins {{ foreman_version }}
        state: present
        filename: /etc/apt/sources.list.d/foreman_plugins.list

- name: "Install Git"
  ansible.builtin.apt: 
    name: git 
    force: yes 
    allow_unauthenticated: true

- name: "Download Foreman installer package"
  ansible.builtin.apt:
    name: foreman-installer
    force: yes
    allow_unauthenticated: true

- name: "Install Puppet Agent"
  ansible.builtin.apt: 
    name: puppet-agent 
    force: yes 
    allow_unauthenticated: true
    
- name: "Bootstap Puppet Agent ssl"
  ansible.builtin.shell: |
    /opt/puppetlabs/bin/puppet config set server {{ groups['tfm_puppet'][0] }} --section main
    /opt/puppetlabs/bin/puppet ssl bootstrap --server {{ groups['tfm_puppet'][0] }}

- name: "Install and Configure Puppet Root CA"
  block:
    - name: "Fetch Puppet Root CA"
      ansible.builtin.shell: |
        echo quit | openssl s_client -showcerts -servername server -connect {{ groups['tfm_puppet'][0] }}:8140 > /usr/local/share/ca-certificates/{{ groups['tfm_puppet'][0] }}-CA.crt 2>&1
      args:
        executable: /bin/bash  
    - name: "Install Puppet Root CA"
      ansible.builtin.shell: |
        update-ca-certificates --fresh
      args:
        executable: /bin/bash  

- name: Ensure group "puppet" exists
  ansible.builtin.group:
    name: puppet
    state: present

- name: Ensure group "foreman-proxy" exists
  ansible.builtin.group:
    name: foreman-proxy
    state: present

- name: Creates directory /etc/bind
  ansible.builtin.file:
    path: /etc/bind
    state: directory
    owner: root
    group: foreman-proxy
    mode: 0750

- name: Creating file /etc/bind/rndc.key
  ansible.builtin.copy:
    dest: /etc/bind/rndc.key
    content: |
      key "foreman" {
              algorithm hmac-md5;
              secret "tUJGI0Gd5xJokIvxqpo2oA==";
      };
    owner: root
    group: foreman-proxy
    mode: 0640

- name: SALT, Create directory /srv/salt
  ansible.builtin.file:
    path: /srv/salt
    state: directory
  when: _salt_test | bool

- name: SALT, Create directory /srv/pillar
  ansible.builtin.file:
    path: /srv/pillar
    state: directory
  when: _salt_test | bool

- name: SALT, Create directory /etc/salt
  ansible.builtin.file:
    path: /etc/salt
    state: directory
  when: _salt_test | bool

- name: SALT, Create directory /etc/salt/master.d
  ansible.builtin.file:
    path: /etc/salt/master.d
    state: directory
  when: _salt_test | bool

- name: SALT, Creating file /etc/salt/autosign.conf
  ansible.builtin.copy:
    dest: /etc/salt/autosign.conf
    content: |
      *.opn.lab
    owner: root
    group: foreman-proxy
    mode: 0660
  when: _salt_test | bool

- name: SALT, Creating file /etc/salt/foreman.yaml
  ansible.builtin.copy:
    dest: /etc/salt/foreman.yaml
    content: |
      ---
      :proto: https
      :host: {{ groups['tfm_app'][0] }}
      :port: 443
      :ssl_ca: "/etc/puppetlabs/puppet/ssl/certs/ca.pem"
      :ssl_cert: "/etc/puppetlabs/puppet/ssl/certs/{{ groups['tfm_proxy_salt'][0] }}.pem"
      :ssl_key: "/etc/puppetlabs/puppet/ssl/private_keys/{{ groups['tfm_proxy_salt'][0] }}.pem"
      :timeout: 10
      :salt: /usr/bin/salt
      :upload_grains: true
    owner: root
    group: root
    mode: 0644
  when: _salt_test | bool

- name: SALT, Install salt-master salt-api
  ansible.builtin.apt: 
    name: "{{ item }}" 
    force: yes 
  loop:
    - salt-master
    - salt-api
  when: _salt_test | bool

- name: Stop service salt-master
  ansible.builtin.systemd_service:
    name: salt-master
    state: stopped
  when: _salt_test | bool

- name: SALT, Add the user 'saltuser' with a disabled shell
  ansible.builtin.user:
    name: saltuser
    password: "{{ 'saltpassword' | password_hash('sha512') }}"
    shell: /bin/false
    create_home: false
    home: '/'
  when: _salt_test | bool

- name: SALT, Ensure salt-master.service is set to User=root
  ansible.builtin.lineinfile:
    path: /lib/systemd/system/salt-master.service
    regexp: '^User=salt'
    line: '#User=salt'
  when: _salt_test | bool

- name: SALT, Ensure salt-master.service is set to Group=root
  ansible.builtin.lineinfile:
    path: /lib/systemd/system/salt-master.service
    regexp: '^Group=salt'
    line: '#Group=salt'
  when: _salt_test | bool

- name: SALT, Creating file /etc/salt/master.d/root.conf
  ansible.builtin.copy:
    dest: /etc/salt/master.d/root.conf
    content: |
      user: root
  when: _salt_test | bool

- name: SALT, bootstrap local salt-master & salt-api 1/4
  ansible.builtin.shell: |
    systemctl daemon-reload
  when: _salt_test | bool

- name: Start service salt-master
  ansible.builtin.systemd_service:
    name: salt-master
    state: started
  when: _salt_test | bool

- name: Start service salt-api
  ansible.builtin.systemd_service:
    name: salt-api
    state: started
  when: _salt_test | bool

- name: SALT, bootstrap local salt-master & salt-api 2/4
  ansible.builtin.shell: |
    git clone https://github.com/SS-archive/salt-states.git /srv/salt
    mkdir -p /srv/salt/_runners
  when: _salt_test | bool

- name: SALT, bootstrap local salt-master & salt-api 3/4
  ansible.builtin.shell: |
    mkdir -p /usr/share/foreman-proxy/salt/reactors
    mkdir -p /var/lib/foreman-proxy/salt/grains
    git clone https://github.com/theforeman/smart_proxy_salt.git /usr/src/smart_proxy_salt
    cp /usr/src/smart_proxy_salt/salt/minion_auth/foreman_minion_auth.sls /usr/share/foreman-proxy/salt/reactors/
    cp /usr/src/smart_proxy_salt/salt/minion_auth/srv/salt/_runners/foreman_file.py /srv/salt/_runners/
    cp /usr/src/smart_proxy_salt/salt/minion_auth/srv/salt/_runners/foreman_https.py /srv/salt/_runners/
    cp /usr/src/smart_proxy_salt/salt/report_upload/foreman_report_upload.sls /usr/share/foreman-proxy/salt/reactors/
    cp /usr/src/smart_proxy_salt/salt/report_upload/srv/salt/_runners/foreman_report_upload.py /srv/salt/_runners/
  when: _salt_test | bool

- name: SALT, bootstrap local salt-master & salt-api 4/4
  ansible.builtin.shell: |
    usermod -a -G foreman-proxy root
    systemctl restart salt-master salt-api
    sleep 10
    salt-run saltutil.sync_all
  when: _salt_test | bool

- name: SALT, Add contents to sudoers
  lineinfile:
    path: /etc/sudoers
    line: |
      Cmnd_Alias SALT = /usr/bin/salt, /usr/bin/salt-key
      foreman-proxy ALL = (ALL) NOPASSWD: SALT
      Defaults:foreman-proxy !requiretty
  when: _salt_test | bool

- name: "Install and Configure Foreman PROXY"
  block:

    - name: "Install Foreman PROXY"
      vars:
        argv_start:
        - foreman-installer
        - --no-enable-foreman
        - --no-enable-puppet
        - --no-enable-foreman-plugin-puppet 
        - --no-enable-foreman-cli-puppet
        - --enable-foreman-proxy
        - --puppet-group=root
        - --puppet-codedir="/etc/puppetlabs/code"
      ansible.builtin.shell: |
        {{ argv_start | join(' ') }} \
        {{ foreman_cmd_options | join(' ') }}
      args:
        executable: /bin/bash

    - name: SALT, Ensure permissive_pki_access is set
      ansible.builtin.lineinfile:
        path: /etc/salt/master.d/foreman.conf
        regexp: '^# permissive_pki_access'
        line: 'permissive_pki_access: True'
      when: _salt_test | bool

    - name: Creating file /etc/puppetlabs/puppet/autosign.conf
      ansible.builtin.copy:
        dest: /etc/puppetlabs/puppet/autosign.conf
        content: |
          *.opn.lab
        owner: root
        group: foreman-proxy
        mode: 0664

    - name: Restart service foreman-proxy
      ansible.builtin.service:
        name: foreman-proxy
        state: restarted

- name: Creates directory /etc/ansible
  ansible.builtin.file:
    path: /etc/ansible
    state: directory
    owner: root
    group: foreman-proxy
    mode: 0750

- name: Creating empty file /etc/ansible/ansible.cfg
  ansible.builtin.copy:
    dest: /etc/ansible/ansible.cfg
    content: ""
    owner: root
    group: foreman-proxy
    mode: 0640

- name: "Bootstap Puppet Agent ssl"
  ansible.builtin.shell: |
    /opt/puppetlabs/bin/puppet config set server {{ groups['tfm_puppet'][0] }} --section main

- name: Restart service puppet
  ansible.builtin.service:
    name: puppet
    state: restarted
